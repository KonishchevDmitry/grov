#!/bin/bash
#
# Updates all project files before release.
#


create_ubuntu_packages()
{(
	local debian_dir="debian"
	local packages_dir="ubuntu"
	rm -rf ubuntu/*

	for dist in karmic lucid
	do
		local dist_dir="$packages_dir/$dist"
		local dist_debian_dir="$dist_dir/debian"

		mkdir -p "$dist_dir"
		cp -r "$debian_dir" "$dist_dir"
		(
			sed -n '1,/ --/p' "$debian_dir/changelog" | \
				sed -r '1s/([^ ]+)\s+\(([0-9.]+)[^)]*\)\s+[^;]+/\1 (\2-0ubuntu1~ppa1~'$dist'1) '$dist'/' | \
				sed '/^  \*/d' | sed '2a\  * '$(echo $dist | awk '{ printf "%s%s", toupper(substr($1, 1, 1)), substr($1, 2) }')' build.'
			echo ''
			cat "$debian_dir/changelog"
		) > "$dist_debian_dir/changelog"
	done
)}


update()
{(
	project_path="$1"
	project_name="$2"
	project_uppercase_name=$(echo -n "$project_name" | awk '{ print toupper($0) }')

	cd "$project_path"

	(
		for lang in ru
		do
			lupdate . -noobsolete -ts translations/${project_name}_${lang}.ts
		done

		echo "set(${project_uppercase_name}_SOURCES"
			find -name '*.cpp' | sed 's/^\.\//\t/' | sort
		echo ')'

		echo ''

		echo "set(${project_uppercase_name}_MOC_SOURCES"
			for file in $(find -name '*.hpp')
			do
				if grep -F Q_OBJECT "$file" > /dev/null
				then
					echo "$file"
				fi
			done | sed 's/^\.\//\t/' | sort
		echo ')'

		echo ''

		echo "set(${project_uppercase_name}_TRANSLATIONS"
			find -name '*.ts' | sed 's/^\.\//\t/' | sort
		echo ')'

		echo ''

		echo "set(${project_uppercase_name}_UIS"
			find -name '*.ui' | sed 's/^\.\//\t/' | sort
		echo ')'
	) > "CMakeProjectFiles.txt"
)}


set -e

update mlib mlib
update src grov
create_ubuntu_packages

